{"componentChunkName":"component---packages-gatsby-theme-docs-src-templates-docs-page-template-js","path":"/code-tester","result":{"data":{"docsPage":{"title":"JS tester!","updated":"a few seconds ago","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"JS tester!\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Does this code block below show syntax highlighting?\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"import Code from '../components/code'\\n\\nexport default {\\n    pre: Code\\n}\\n\")), mdx(\"h2\", null, \"This is docsPage\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"/** @jsx jsx */\\nimport { jsx } from 'theme-ui'\\nimport { MDXRenderer } from 'gatsby-plugin-mdx';\\nimport Layout from './layout';\\nimport TableOfContents from './table-of-contents'\\n\\nconst DocsPage = ({ page }) => (\\n  <Layout>\\n    <h1>{page.title}</h1>\\n    <MDXRenderer>{page.body}</MDXRenderer>\\n    <p\\n      sx={{\\n        borderTop: theme => `1px solid  ${theme.colors.muted}`,\\n        color: 'muted',\\n        fontSize: 14,\\n        mt: 2,\\n        pt: 2\\n      }}\\n    >This page was updated {page.updated}.</p>\\n    <p>How cool is this</p>\\n    <TableOfContents/>\\n  </Layout>\\n);\\n\\nexport default DocsPage;\\n\")), mdx(\"h1\", null, \"FUck this is mean!\"), mdx(\"h2\", null, \"Default Pre\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"This is defualt pre\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"pageID":"64a62577-666f-5192-86e3-8e3023f8f84a"}}}